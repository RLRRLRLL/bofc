@mixin flex-around($dir) {
	display: flex;
	align-items: center;
	justify-content: space-around;
	flex-direction: $dir;
}

@mixin flex-center($dir) {
	display: flex;
	align-items: center;
	justify-content: center;
	flex-direction: $dir;
}

@mixin flex-between($dir) {
	display: flex;
	align-items: center;
	justify-content: space-between;
	flex-direction: $dir;
}

@mixin flex-column() {
	display: flex;
	flex-direction: column;
}

// scroll bar
@mixin scrollbar() {
	&::-webkit-scrollbar {
		background: $black09;
		width: 8px;
	}

	&::-webkit-scrollbar-thumb {
		background: $white04;
	}
}

// scroll bar with transparent bg
@mixin scrollbar-modal() {
	&::-webkit-scrollbar {
		background: transparent;
		width: 4px;
	}

	&::-webkit-scrollbar-thumb {
		background: $grayMain;
	}
}

// Gradient borders
@mixin border-gradient($gradient) {
	border: 0px solid;
	border-image-slice: 1;
	border-width: 2px;
	border-image-source: $gradient;
}

// Position absolute stretch
@mixin absolute-stretch() {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	width: 100%;
	height: 100%;
}

// Image standart styles
@mixin image() {
	width: 100%;
	height: 100%;
	object-fit: cover;
	object-position: center;
}

// admin pages: Cancel image when uploading or from show page
// parent div has to have posrel
@mixin cancel-image-button() {
	position: absolute;
	right: 0;
	top: 0;
	font-size: 30px;
	line-height: 0.7;
	background: transparent;
	color: #830f0f;
	outline: none !important;
	border: none !important;
	transition: color 0.15s;

	&:hover {
		color: white;
		background: rgba(black, 0.35);
	}
}

// admin pages: cta buttons with dashed border
// : next or save button
@mixin cta-dashed() {
	background: transparent;
	outline: none !important;
	border: none;
	//
	width: 100%;
	cursor: pointer;
	color: $grayMain;
	box-shadow: none;
	border: 1px solid rgba($grayMain, 0.5);
	border-radius: 7px;
	padding: 20px;
	transition: all 0.15s ease-in;

	&:hover {
		background: rgba(black, 0.05);
		color: $blueMain;
		border: 1px dashed $blueMain;
	}

	&:active,
	&:focus {
		background-color: rgba(black, 0.1) !important;
		color: $greenMain !important;
		border: 1px dashed $greenMain !important;
		box-shadow: none !important;
	}
}

// : upload images
@mixin cta-dashed--upload() {
	@include cta-dashed;
	border: 1px dashed $grayMain;
	&:hover {
		color: white;
		border: 1px dashed white;
	}
}

/**
 * Effects
 */

// fill
@mixin fill-effect($color) {
	position: relative;

	&::before {
		content: attr(data-text);
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		transition: all 0.3s ease-out;
		color: $color;
		width: 0%;
		overflow: hidden;
	}

	&:hover::before {
		width: 100%;
	}
}

// double underline on hover effect for links
@mixin double-underline($hoverColor, $focusColor, $lineColor) {
	position: relative;

	&::before,
	&::after {
		content: "";
		position: absolute;
		height: 1px;
		pointer-events: none;
		transform-origin: 50% 0%;
		transform: translate3d(0, 3px, 0);
		transition-property: transform, opacity;
		transition-duration: 0.3s;
		transition-timing-function: cubic-bezier(0.2, 1, 0.8, 1);
		background: $lineColor;
		opacity: 0;
	}

	&::after {
		top: calc(100% + 7px);
		width: 70%;
		left: 15%;
	}

	&::before {
		top: calc(100% + 3px);
		width: 90%;
		left: 5%;
		transition-delay: 0.1s;
	}

	&:hover {
		&::before,
		&::after {
			opacity: 1;
			transform: translate3d(0, 0, 0);
			transition-timing-function: cubic-bezier(0.2, 0, 0.3, 1);
		}
	}

	&:hover,
	&.active,
	&.active:hover {
		color: $hoverColor;
	}

	&:focus,
	&:active {
		color: $focusColor;
	}

	&.active {
		&::before,
		&::after {
			opacity: 1;
		}
	}
}

// select dropdown
@mixin select() {
	.select {
		width: 100%;
		position: relative;

		/* Styles for create pom page START */
		&__button,
		&__list li {
			padding: 10px;
		}

		&__button {
			@include flex-between(row);
			width: 100%;
			border: none;
			outline: none !important;
			background: $bg;
			border: $border;
			border-radius: 4px;
			cursor: pointer;
			transition: background 0.15s, border 0.15s;

			&--txt {
				color: $white07;
				font-weight: 300;
				font-size: 18px;
				text-align: left;
			}

			&--arr {
				width: 20px;
				height: 20px;
				fill: $white07;
				transition: transform 0.15s ease;
			}

			&.active {
				.select__button--arr {
					transform: rotate(180deg);
				}
			}

			&:hover,
			&.active {
				border-color: rgba($blueMain, 0.7);
				color: $white08;
			}
		}

		&__list {
			position: absolute;
			top: 100%;
			left: 0;
			right: 0;
			width: 100%;
			@include flex-column;
			align-items: stretch;
			z-index: $medium;

			border: 1px solid rgba($blueMain, 0.3);
			background: $blackSecondary;
			box-shadow: 0 4px 5px 0 $black04;

			li {
				display: block;
				cursor: pointer;
				color: $white06;
				padding: 12px 10px;

				&.fallback {
					color: $white02;
				}

				&:hover {
					color: white;
					background: rgba(white, 0.06);
				}
			}
		}
	}
}

// Radio input simple styles
@mixin radio() {
	[type="radio"] {
		&:checked,
		&:not(:checked) {
			position: absolute;
			left: -9999px;

			& + label {
				position: relative;
				display: inline-block;
				padding-left: 25px;
				color: $grayMain;
				cursor: pointer;

				&::before,
				&::after {
					content: "";
					position: absolute;
					top: 6.66px;
					left: 6.66px;
					// transform: translate(-6px, -6px);
					width: 12px;
					height: 12px;
					border-radius: 100%;
					transition: all 0.2s ease;
				}

				&::before {
					background: $grayMain;
				}

				&::after {
					background: $greenMain;
				}
			}
		}

		&:checked + label::after {
			opacity: 1;
			-webkit-transform: scale(1);
			transform: scale(1);
		}

		&:not(:checked) + label::after {
			opacity: 0;
			-webkit-transform: scale(0);
			transform: scale(0);
		}

		&:checked {
			& + label {
				color: $grayLighter;
			}

			& + label::before {
				background: $blackMain;
			}
			& + label::after {
				background: $greenMain;
			}
		}
	}
}

// Checkbox input simple styles
@mixin check() {
	// these styles are attached to input tag directly
	position: absolute; // take it out of document flow
	opacity: 0; // hide it

	& + label {
		position: relative;
		cursor: pointer;
		padding: 0;
		display: inline-flex !important;
		@include flex-center(row);
	}

	// Box.
	& + label:before {
		content: "";
		margin-right: 10px;
		display: inline-block;
		vertical-align: text-top;
		width: 15px;
		height: 15px;
		background: $grayMain;
	}

	// Box hover
	&:hover + label:before {
		background: rgba($greenMain, 0.5);
	}

	// Box checked
	&:checked + label:before {
		background: $greenMain;
	}

	//
	&:checked + label:after {
		content: url("https://api.iconify.design/ant-design:check-outlined.svg?color=white&height=16");
		vertical-align: -0.125em;
		position: absolute;
		display: inline;
		width: 100%;
		height: 100%;
		top: 52%;
		left: 50%;
		transform: translate(-50%, -50%);
		fill: white;
	}
}
